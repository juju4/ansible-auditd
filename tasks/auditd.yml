---

- block:
## https://github.com/lxc/lxd/issues/2004, only on xenial?
    - name: ensure auditd package is present
      package:
        name: "{{ auditd_pkg }}"
        state: present
        update_cache: yes
      register: pkg_result
      until: pkg_result is success

    - name: retrieve suid/sgid files list
      command: >
        find / ! \( -path {{ ' -prune -o -path '.join(auditd_sugid_ignored_paths) }} -prune \)
          -a -perm /u=s,g=s -type f
      register: sugid_files
      ignore_errors: true
      changed_when: false
      check_mode: no

    - name: "create auditd rules {{ auditd_confdir }} directory"
      file:
        path: "{{ auditd_confdir }}"
        state: directory

    - name: check is augenrules is present
      stat:
        path: "/sbin/augenrules"
      register: augenrules_file
      changed_when: false

    - name: configure audit system
      template:
        src: "{{ item }}.rules.j2"
        dest: "{{ auditd_confdir }}/{{ item }}.rules"
        mode: '0644'
        backup: yes
      with_items: "{{ auditd_rules_templates }}"
      notify:
        - augenrules - debian
        - restart auditd
        - restart auditd - rhel7

    # /sbin/augenrules isn't present to generate /etc/audit/audit.rules
    - name: assemble rules into a single file
      assemble:
        src: "{{ auditd_confdir }}"
        dest: /etc/audit/audit.rules
      when: not augenrules_file.stat.exists

    - name: Check if grub is present
      stat:
        path: /etc/default/grub
      register: hasgrub
    - block:
        - name: check if auditing present in grub config
          command: "egrep '^GRUB_CMDLINE_LINUX=\".*audit=1.*\"' /etc/default/grub"
          changed_when: false
          register: auditgrub
          ignore_errors: true
          check_mode: no

        - name: Enable Auditing in grub for Processes That Start Prior to auditd - CIS
          replace:
            dest: /etc/default/grub
            regexp: '^GRUB_CMDLINE_LINUX="(.*)"'
            replace: 'GRUB_CMDLINE_LINUX="\1 audit=1"'
          when: not auditgrub.stdout
      when: hasgrub.stat is defined and hasgrub.stat.exists

    - name: Enable and start auditd
      service:
        name: auditd
        state: started
        enabled: yes

    - name: Set fact for monit
      set_fact:
        monit_auditd: true
  when:
    - not (ansible_virtualization_type is defined and
          (ansible_virtualization_type == "lxc" or ansible_virtualization_type == "docker")
        )
    - not osquery_process_auditing|bool
  tags: auditd

- block:
    - name: Disable auditd as osquery present with process auditing configured
      service:
        name: auditd
        state: stopped
        enabled: no
    - name: Set fact for monit
      set_fact:
        monit_auditd: false
  when: osquery_process_auditing|bool

- include: logrotate.yml
  when: osquery_process_auditing|bool
